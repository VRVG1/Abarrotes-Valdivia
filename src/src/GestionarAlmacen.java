/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package src;

import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;

/**
 *
 * @author vival
 */
public class GestionarAlmacen extends javax.swing.JPanel {
    DefaultTableModel modeloTablaAlmacen;
    static String[] cabeceraTablaAlmacen = {"ID", "Nombre", "Precio", "Existencia", "Stock", "Unidad de Medida"};
    static String[][] datosTemporalesTablaAlmacen = {{"1","Pepsi", "20", "10", "10", "Empaquetado"}, {"2","Sabritas", "13", "5", "10", "Empaquetado"}};
    static int tablaAlmacenSeleccionModificar;
    /**
     * Creates new form GestionarAlmacen
     */
    public GestionarAlmacen() {
        initComponents();
        btnGroupAlmacen.add(btnRadioID);
        btnGroupAlmacen.add(btnRadioNombre);
        btnGroupAlmacen.add(btnRadioPrecio);
        btnGroupAlmacen.add(btnRadioCantidad);
        
        modeloTablaAlmacen = new DefaultTableModel(datosTemporalesTablaAlmacen,cabeceraTablaAlmacen);
        tablaAlmacen.setModel(modeloTablaAlmacen);
        tablaAlmacen.getTableHeader().setReorderingAllowed(false);
        almacenFormaBase();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupAlmacen = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAlmacen = new javax.swing.JTable();
        btnAlmacenAgregar = new javax.swing.JButton();
        btnAlmacenEliminar = new javax.swing.JButton();
        btnAlmacenModificar = new javax.swing.JButton();
        btnAlmacenConsultar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnRadioCantidad = new javax.swing.JRadioButton();
        btnRadioID = new javax.swing.JRadioButton();
        btnRadioNombre = new javax.swing.JRadioButton();
        btnRadioPrecio = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        labelAlmacenUM = new javax.swing.JLabel();
        labelAlmacenStock = new javax.swing.JLabel();
        labelAlmacenExistencia = new javax.swing.JLabel();
        labelAlmacenPrecio = new javax.swing.JLabel();
        labelAlmacenNombre = new javax.swing.JLabel();
        txtExistencia = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        txtStock = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        labelTituloAlmacen = new javax.swing.JLabel();
        btnConfirmarAlmacen = new javax.swing.JButton();
        comboBoxAlmacenUM = new javax.swing.JComboBox<>();
        txtAlmacenBuscar = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1450, 694));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaAlmacen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaAlmacen);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 630, 510));

        btnAlmacenAgregar.setText("Agregar");
        btnAlmacenAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlmacenAgregarActionPerformed(evt);
            }
        });
        add(btnAlmacenAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 137, 90, -1));

        btnAlmacenEliminar.setText("Eliminar");
        btnAlmacenEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlmacenEliminarActionPerformed(evt);
            }
        });
        add(btnAlmacenEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 137, 90, -1));

        btnAlmacenModificar.setText("Modificar");
        btnAlmacenModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlmacenModificarActionPerformed(evt);
            }
        });
        add(btnAlmacenModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 187, 90, -1));

        btnAlmacenConsultar.setText("Consultar");
        btnAlmacenConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlmacenConsultarActionPerformed(evt);
            }
        });
        add(btnAlmacenConsultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 187, 90, -1));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("GESTIONAR COMPRAS");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 47, 220, 50));

        btnRadioCantidad.setText("Cantidad");
        add(btnRadioCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 360, 120, -1));

        btnRadioID.setText("ID");
        add(btnRadioID, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 240, 70, -1));

        btnRadioNombre.setText("Nombre");
        add(btnRadioNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 280, 110, -1));

        btnRadioPrecio.setText("Precio");
        add(btnRadioPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 320, 100, -1));

        jLabel7.setText("Filtrar por:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 210, 90, -1));

        labelAlmacenUM.setText("Unidad de medida");
        add(labelAlmacenUM, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 110, -1));

        labelAlmacenStock.setText("Stock");
        add(labelAlmacenStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 110, -1));

        labelAlmacenExistencia.setText("Existencia");
        add(labelAlmacenExistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 110, -1));

        labelAlmacenPrecio.setText("Precio");
        add(labelAlmacenPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 110, -1));

        labelAlmacenNombre.setText("Nombre");
        add(labelAlmacenNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 110, -1));

        txtExistencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtExistenciaKeyTyped(evt);
            }
        });
        add(txtExistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, 160, 30));

        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioKeyTyped(evt);
            }
        });
        add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, 160, 30));

        txtStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStockKeyTyped(evt);
            }
        });
        add(txtStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 360, 160, 30));
        add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 160, 30));

        labelTituloAlmacen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTituloAlmacen.setText("jLabel8");
        add(labelTituloAlmacen, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 240, 80, -1));

        btnConfirmarAlmacen.setText("Confirmar");
        btnConfirmarAlmacen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarAlmacenActionPerformed(evt);
            }
        });
        add(btnConfirmarAlmacen, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 440, 87, -1));

        comboBoxAlmacenUM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Empaquetado", "Kilogramos" }));
        add(comboBoxAlmacenUM, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 400, 160, -1));
        add(txtAlmacenBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 160, 220, 30));

        jLabel8.setText("Buscar");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 170, 70, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAlmacenAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlmacenAgregarActionPerformed
        almacenFormaBase();
        almacenEditable();
        labelTituloAlmacen.setText("Agregar");
    }//GEN-LAST:event_btnAlmacenAgregarActionPerformed

    private void btnAlmacenEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlmacenEliminarActionPerformed
        if(tablaAlmacen.getSelectedRow() != -1) {
            int seleccion;
            String[] aux = new String[modeloTablaAlmacen.getColumnCount()];
            for (int i = 0; i < aux.length; i++) {
                aux[i] = modeloTablaAlmacen.getValueAt(tablaAlmacen.getSelectedRow(), i).toString();
            }
            seleccion = JOptionPane.showConfirmDialog(this, "Seguro que quieres eliminar el siguiente producto? \n " + aux[1]
                , "Eliminar producto", JOptionPane.WARNING_MESSAGE);
            if (JOptionPane.OK_OPTION == seleccion) {
                modeloTablaAlmacen.removeRow(tablaAlmacen.getSelectedRow());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Porfavor seleccionar el elemento que se desea elminar de la tabla","No se a seleccionado ningun elemnto", JOptionPane.WARNING_MESSAGE );
        }
    }//GEN-LAST:event_btnAlmacenEliminarActionPerformed

    private void btnAlmacenModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlmacenModificarActionPerformed
        if(tablaAlmacen.getSelectedRow() != -1) {
            labelTituloAlmacen.setText("Modificar");
            labelTituloAlmacen.setVisible(true);
            txtNombre.setVisible(true);
            txtPrecio.setVisible(true);
            txtExistencia.setVisible(true);
            txtStock.setVisible(true);
            comboBoxAlmacenUM.setVisible(true);
            labelAlmacenExistencia.setVisible(true);
            labelAlmacenNombre.setVisible(true);
            labelAlmacenPrecio.setVisible(true);
            labelAlmacenStock.setVisible(true);
            labelAlmacenUM.setVisible(true);
            btnConfirmarAlmacen.setVisible(true);
            btnConfirmarAlmacen.setEnabled(true);
            String[] aux = new String[modeloTablaAlmacen.getColumnCount()];
            for (int i = 0; i < aux.length; i++) {
                aux[i] = modeloTablaAlmacen.getValueAt(tablaAlmacen.getSelectedRow(), i).toString();
            }
            txtNombre.setText(aux[1]);
            txtPrecio.setText(aux[2]);
            txtExistencia.setText(aux[3]);
            txtStock.setText(aux[4]);
            if (aux[5].equals(comboBoxAlmacenUM.getItemAt(0))) {
                comboBoxAlmacenUM.setSelectedIndex(0);
            } else if (aux[5].equals(comboBoxAlmacenUM.getItemAt(1))) {
                comboBoxAlmacenUM.setSelectedIndex(1);
            }
            btnConfirmarAlmacen.setVisible(true);
            btnConfirmarAlmacen.setEnabled(true);
            tablaAlmacenSeleccionModificar = tablaAlmacen.getSelectedRow();
        } else {
            JOptionPane.showMessageDialog(this, "Porfavor seleccionar el elemento que se desea modificar de la tabla","No se a seleccionado ningun elemnto", JOptionPane.WARNING_MESSAGE );
        }
    }//GEN-LAST:event_btnAlmacenModificarActionPerformed

    private void btnAlmacenConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlmacenConsultarActionPerformed
        jLabel7.setVisible(true);
        jLabel8.setVisible(true);
        txtAlmacenBuscar.setVisible(true);
        btnRadioID.setVisible(true);
        btnRadioCantidad.setVisible(true);
        btnRadioNombre.setVisible(true);
        btnRadioPrecio.setVisible(true);
    }//GEN-LAST:event_btnAlmacenConsultarActionPerformed

    private void txtExistenciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtExistenciaKeyTyped
        char c = evt.getKeyChar();
        if(c >= 48 && c <= 57 || c == 8) {}
        else {
            JOptionPane.showMessageDialog(this, "El caracter " + c + " no es valido", "Caracter Invalido", JOptionPane.ERROR_MESSAGE);
            evt.consume();
        }
    }//GEN-LAST:event_txtExistenciaKeyTyped

    private void txtPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyTyped
        char c = evt.getKeyChar();
        if(c >= 48 && c <= 57 || c == 8) {}
        else {
            evt.consume();
            JOptionPane.showMessageDialog(this, "El caracter " + c + " no es valido", "Caracter Invalido", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtPrecioKeyTyped

    private void txtStockKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStockKeyTyped
        char c = evt.getKeyChar();
        if(c >= 48 && c <= 57 || c == 8) {}
        else {
            JOptionPane.showMessageDialog(this, "El caracter " + c + " no es valido", "Caracter Invalido", JOptionPane.ERROR_MESSAGE);
            evt.consume();
        }
    }//GEN-LAST:event_txtStockKeyTyped

    private void btnConfirmarAlmacenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarAlmacenActionPerformed
        boolean confirmacion1 = true, confirmacion2 = true, confirmacion3 = true;
        switch (labelTituloAlmacen.getText()) {
            case "Agregar":
            if (comprobarTXTAlmacen()) {
                if(!(Double.valueOf(txtPrecio.getText()) >= 0 && Double.valueOf(txtPrecio.getText()) <= 9999.99)){
                    JOptionPane.showMessageDialog(this, "El rango del precio tiene que ser de 0 a 9999.99", "Fuera de Rango", JOptionPane.ERROR_MESSAGE);
                    confirmacion1 = false;
                }
                if (confirmacion1 == true && !(Double.valueOf(txtExistencia.getText()) >= 0 && Double.valueOf(txtExistencia.getText()) <= 99)) {
                    JOptionPane.showMessageDialog(this, "El rango de la existencia tiene que ser de 0 a 99", "Fuera de Rango", JOptionPane.ERROR_MESSAGE);
                    confirmacion2 = false;
                }
                if (confirmacion1 == true && confirmacion2 == true && !(Double.valueOf(txtStock.getText()) >= 0 && Double.valueOf(txtStock.getText()) <= 99)) {
                    JOptionPane.showMessageDialog(this, "El rango del stock tiene que ser de 0 a 99", "Fuera de Rango", JOptionPane.ERROR_MESSAGE);
                    confirmacion3 = false;
                }
                if (confirmacion1 == true && confirmacion2 == true && confirmacion3 == true) {
                    String[] datos = {"3", txtNombre.getText(), txtPrecio.getText(), txtExistencia.getText(), txtStock.getText(), comboBoxAlmacenUM.getSelectedItem().toString()};
                    modeloTablaAlmacen.addRow(datos);
                    int seleccion = JOptionPane.showOptionDialog(this, "Productor agregado con extio \n Desea agregar otro producto", "Producto agregador",
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Si", "No"}, "Si");
                    if (seleccion == 1) {
                        almacenFormaBase();
                    } else {
                        txtNombre.setText("");
                        txtPrecio.setText("");
                        txtExistencia.setText("");
                        txtStock.setText("");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Favor de rellenar todos los campos de texto", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }
            break;
            case "Eliminar":
            break;
            case "Modificar":
            if (tablaAlmacenSeleccionModificar == tablaAlmacen.getSelectedRow()) {
                int seleccion;
                String[] aux = new String[modeloTablaAlmacen.getColumnCount()];
                for (int i = 0; i < aux.length; i++) {
                    aux[i] = modeloTablaAlmacen.getValueAt(tablaAlmacen.getSelectedRow(), i).toString();
                }
                if (comprobarTXTAlmacen()) {
                    if(!(Double.valueOf(txtPrecio.getText()) >= 0 && Double.valueOf(txtPrecio.getText()) <= 9999.99)){
                        JOptionPane.showMessageDialog(this, "El rango del precio tiene que ser de 0 a 9999.99", "Fuera de Rango", JOptionPane.ERROR_MESSAGE);
                        confirmacion1 = false;
                    }
                    if (confirmacion1 == true && !(Double.valueOf(txtExistencia.getText()) >= 0 && Double.valueOf(txtExistencia.getText()) <= 99)) {
                        JOptionPane.showMessageDialog(this, "El rango de la existencia tiene que ser de 0 a 99", "Fuera de Rango", JOptionPane.ERROR_MESSAGE);
                        confirmacion2 = false;
                    }
                    if (confirmacion1 == true && confirmacion2 == true && !(Double.valueOf(txtStock.getText()) >= 0 && Double.valueOf(txtStock.getText()) <= 99)) {
                        JOptionPane.showMessageDialog(this, "El rango del stock tiene que ser de 0 a 99", "Fuera de Rango", JOptionPane.ERROR_MESSAGE);
                        confirmacion3 = false;
                    }
                    if (confirmacion1 == true && confirmacion2 == true && confirmacion3 == true) {
                        seleccion = JOptionPane.showConfirmDialog(this, "Se modificaran los siguientes elementos \n"
                            + aux[1] + "--->"
                            + txtNombre.getText() + "\n" + aux[2] + "--->"
                            + txtPrecio.getText() + "\n" + aux[3] + "--->"
                            + txtExistencia.getText() + "\n" + aux[4] + "--->"
                            + txtStock.getText() + "\n" + aux[5] + "--->"
                            + comboBoxAlmacenUM.getSelectedItem().toString(), "Modificar producto", JOptionPane.INFORMATION_MESSAGE);
                        if (JOptionPane.OK_OPTION == seleccion) {
                            modeloTablaAlmacen.setValueAt(aux[0], tablaAlmacenSeleccionModificar, 0);
                            modeloTablaAlmacen.setValueAt(txtNombre.getText(), tablaAlmacenSeleccionModificar, 1);
                            modeloTablaAlmacen.setValueAt(txtPrecio.getText(), tablaAlmacenSeleccionModificar, 2);
                            modeloTablaAlmacen.setValueAt(txtExistencia.getText(), tablaAlmacenSeleccionModificar, 3);
                            modeloTablaAlmacen.setValueAt(txtStock.getText(), tablaAlmacenSeleccionModificar, 4);
                            modeloTablaAlmacen.setValueAt(comboBoxAlmacenUM.getSelectedItem().toString(), tablaAlmacenSeleccionModificar, 5);
                            if(JOptionPane.showOptionDialog(this, "Productor modificado con extio \n Desea modificar otro producto", "Producto Modificado",
                                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Si", "No"}, "Si") == 1) {
                            almacenFormaBase();
                        } else {
                            txtNombre.setText("");
                            txtPrecio.setText("");
                            txtExistencia.setText("");
                            txtStock.setText("");
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Favor de rellenar todos los campos de texto", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Favor de seleccionar en la tabla el mismo producto que se encuentra en el renglon "
                + (tablaAlmacenSeleccionModificar + 1), "Se a seleccionado otro producto", JOptionPane.WARNING_MESSAGE);
        }
        break;
        case "Consultar":
        break;
        default:
        break;
        }
    }//GEN-LAST:event_btnConfirmarAlmacenActionPerformed

        /*------------------Metodo para regresar a la fomra base el panel almacen------------------------*/
    public void almacenFormaBase() {
        labelTituloAlmacen.setVisible(false);
        txtNombre.setVisible(false);
        txtPrecio.setVisible(false);
        txtExistencia.setVisible(false);
        txtStock.setVisible(false);
        comboBoxAlmacenUM.setVisible(false);
        jLabel7.setVisible(false);
        btnRadioID.setVisible(false);
        btnRadioCantidad.setVisible(false);
        btnRadioNombre.setVisible(false);
        btnRadioPrecio.setVisible(false);
        jLabel8.setVisible(false);
        txtAlmacenBuscar.setVisible(false);
        
        btnRadioID.setSelected(true);
        txtNombre.setText("");
        txtPrecio.setText("");
        txtExistencia.setText("");
        txtStock.setText("");
        txtAlmacenBuscar.setText("");
        
        labelAlmacenExistencia.setVisible(false);
        labelAlmacenNombre.setVisible(false);
        labelAlmacenPrecio.setVisible(false);
        labelAlmacenStock.setVisible(false);
        labelAlmacenUM.setVisible(false);
        
        btnConfirmarAlmacen.setVisible(false);
        btnConfirmarAlmacen.setEnabled(false);
    }
    /*------------------Metodo para poner visible los txt y labels para editar los productos del panel almacen------------------------*/
    public void almacenEditable() {
        labelTituloAlmacen.setVisible(true);
        txtNombre.setVisible(true);
        txtPrecio.setVisible(true);
        txtExistencia.setVisible(true);
        txtStock.setVisible(true);
        comboBoxAlmacenUM.setVisible(true);
        
        labelAlmacenExistencia.setVisible(true);
        labelAlmacenNombre.setVisible(true);
        labelAlmacenPrecio.setVisible(true);
        labelAlmacenStock.setVisible(true);
        labelAlmacenUM.setVisible(true);
        
        btnConfirmarAlmacen.setVisible(true);
        btnConfirmarAlmacen.setEnabled(true);
    }
    /*------------------Metodo para Comprobar si los textos estan vacios del panel almecen------------------------*/
    public boolean comprobarTXTAlmacen() {
        return !txtStock.getText().equals("")
                && !txtPrecio.getText().equals("") && !txtExistencia.getText().equals("") && !txtNombre.getText().equals("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlmacenAgregar;
    private javax.swing.JButton btnAlmacenConsultar;
    private javax.swing.JButton btnAlmacenEliminar;
    private javax.swing.JButton btnAlmacenModificar;
    private javax.swing.JButton btnConfirmarAlmacen;
    private javax.swing.ButtonGroup btnGroupAlmacen;
    private javax.swing.JRadioButton btnRadioCantidad;
    private javax.swing.JRadioButton btnRadioID;
    private javax.swing.JRadioButton btnRadioNombre;
    private javax.swing.JRadioButton btnRadioPrecio;
    private javax.swing.JComboBox<String> comboBoxAlmacenUM;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelAlmacenExistencia;
    private javax.swing.JLabel labelAlmacenNombre;
    private javax.swing.JLabel labelAlmacenPrecio;
    private javax.swing.JLabel labelAlmacenStock;
    private javax.swing.JLabel labelAlmacenUM;
    private javax.swing.JLabel labelTituloAlmacen;
    private javax.swing.JTable tablaAlmacen;
    private javax.swing.JTextField txtAlmacenBuscar;
    private javax.swing.JTextField txtExistencia;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables
}
